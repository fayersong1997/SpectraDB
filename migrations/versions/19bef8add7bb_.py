"""empty message

Revision ID: 19bef8add7bb
Revises: 
Create Date: 2023-11-10 19:07:23.998309

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '19bef8add7bb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('facility',
    sa.Column('facility_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('facility_fullname', sa.String(length=20), nullable=True),
    sa.Column('facility_abbreviation', sa.String(length=10), nullable=False),
    sa.Column('facility_laboratory', sa.String(length=50), nullable=True),
    sa.Column('facility_country', sa.String(length=20), nullable=True),
    sa.Column('facility_city', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('facility_id'),
    sa.UniqueConstraint('facility_abbreviation'),
    sa.UniqueConstraint('facility_fullname')
    )
    op.create_table('sample',
    sa.Column('sample_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('sample_name', sa.String(length=50), nullable=False),
    sa.Column('sample_formula', sa.String(length=20), nullable=True),
    sa.Column('sample_preparation', sa.String(length=50), nullable=True),
    sa.Column('sample_notes', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('sample_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_name', sa.String(length=50), nullable=False),
    sa.Column('user_password', sa.String(length=50), nullable=False),
    sa.Column('user_email', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('user_email')
    )
    op.create_table('beamline',
    sa.Column('beamline_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('beamline_name', sa.String(length=50), nullable=False),
    sa.Column('facility_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['facility_id'], ['facility.facility_id'], ),
    sa.PrimaryKeyConstraint('beamline_id')
    )
    op.create_table('group',
    sa.Column('group_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('group_name', sa.String(length=50), nullable=False),
    sa.Column('group_description', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('group_id'),
    sa.UniqueConstraint('group_name')
    )
    op.create_table('spectra',
    sa.Column('spectra_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('element', sa.String(length=10), nullable=False),
    sa.Column('edge', sa.String(length=10), nullable=False),
    sa.Column('measurement_mode', sa.String(length=30), nullable=True),
    sa.Column('rating', sa.String(length=20), nullable=True),
    sa.Column('file_path', sa.String(length=50), nullable=False),
    sa.Column('sample_id', sa.Integer(), nullable=True),
    sa.Column('beamline_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['beamline_id'], ['beamline.beamline_id'], ),
    sa.ForeignKeyConstraint(['sample_id'], ['sample.sample_id'], ),
    sa.PrimaryKeyConstraint('spectra_id'),
    sa.UniqueConstraint('file_path')
    )
    op.create_table('divide_group',
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('spectra_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.group_id'], ),
    sa.ForeignKeyConstraint(['spectra_id'], ['spectra.spectra_id'], ),
    sa.PrimaryKeyConstraint('group_id', 'spectra_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('divide_group')
    op.drop_table('spectra')
    op.drop_table('group')
    op.drop_table('beamline')
    op.drop_table('user')
    op.drop_table('sample')
    op.drop_table('facility')
    # ### end Alembic commands ###
